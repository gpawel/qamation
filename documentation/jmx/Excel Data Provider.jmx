<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3.20171014">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <org.qamation.jmeter.config.data.provider.excel.ExcelData guiclass="TestBeanGUI" testclass="org.qamation.jmeter.config.data.provider.excel.ExcelData" testname="Excel Data Provider" enabled="true">
        <stringProp name="dataLabel">EXCELDATA</stringProp>
        <stringProp name="dataProviderImplClassName">org.qamation.data.provider.excel.ExcelDataAdapter</stringProp>
        <stringProp name="filename">/home/pavel/workspace/qamation/documentation/Examples/SimpleDataProvider/Excel_Data.xlsx</stringProp>
        <boolProp name="resetAtEOF">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <intProp name="tabNumber">0</intProp>
      </org.qamation.jmeter.config.data.provider.excel.ExcelData>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1507988099000</longProp>
        <longProp name="ThreadGroup.end_time">1507988099000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="EXCELDATA" enabled="true">
          <stringProp name="cacheKey"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">log.info(&quot;Field_1 = &quot;+&quot;${Field_1}&quot;+&quot; or &quot;+vars.get(&quot;Field_1&quot;));
log.info(&quot;Field_2 = &quot;+&quot;${Field_2}&quot;+&quot; or &quot;+vars.get(&quot;Field_2&quot;));
log.info(&quot;Field_3 = &quot;+&quot;${Field_3}&quot;+&quot; or &quot;+vars.get(&quot;Field_3&quot;));
log.info(&quot;Field_4 = &quot;+&quot;${Field_4}&quot;+&quot; or &quot;+vars.get(&quot;Field_4&quot;));
</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <org.qamation.jmeter.config.data.provider.excel.ExcelData guiclass="TestBeanGUI" testclass="org.qamation.jmeter.config.data.provider.excel.ExcelData" testname="Excel Data Provider" enabled="true">
            <stringProp name="filename">/home/pavel/workspace/qamation/documentation/Examples/SimpleDataProvider/Excel_Data_1.xlsx</stringProp>
            <stringProp name="dataProviderImplClassName">org.qamation.data.provider.excel.ExcelDataAdapter</stringProp>
            <boolProp name="resetAtEOF">true</boolProp>
            <stringProp name="dataLabel">DATA2</stringProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <intProp name="tabNumber">0</intProp>
          </org.qamation.jmeter.config.data.provider.excel.ExcelData>
          <hashTree/>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="DATA2" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="script">log.info(&quot;Value_1 = &quot;+&quot;${Value_1}&quot;+&quot; or &quot;+vars.get(&quot;Value_1&quot;));
log.info(&quot;Value_2 = &quot;+&quot;${Value_2}&quot;+&quot; or &quot;+vars.get(&quot;Value_2&quot;));
log.info(&quot;Value_3 = &quot;+&quot;${Value_3}&quot;+&quot; or &quot;+vars.get(&quot;Value_3&quot;));
log.info(&quot;Value_4 = &quot;+&quot;${Value_4}&quot;+&quot; or &quot;+vars.get(&quot;Value_4&quot;));</stringProp>
          </JSR223Sampler>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="BeanShell Sampler" enabled="false">
          <stringProp name="BeanShellSampler.query">import org.qamation.data.provider.excel.ExcelDataProvider;
import java.util.Iterator;

Object obj = vars.getObject(&quot;EXCELDATA&quot;); 
ExcelDataProvider provider = (ExcelDataProvider) obj;
//String[] header = provider.getFieldNames();
//log.info(&quot;\nHeader: &quot;+header+&quot;\n&quot;);
//int size = provider.getDataSize();
//log.info(&quot;Excel Data Provider size: &quot;+size);
//log.info(&quot;Excel Data Provider has &quot;+header.length+&quot; fields&quot;)
/*
Iterator itrtr = provider.getIterator();
while (itrtr.hasNext()) {
	String [] line = itrtr.next();
	log.info(&quot;=======================================&quot;);
	for (int i=0; i&lt;= header.length; i++) {
		log.info(header[i]+&quot; = &quot;+line[i]);
	}
}
*/
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
